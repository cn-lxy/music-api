version: '3'

# 网络配置
networks:
  backend:
    driver: ${NETWORKS_DRIVER}

# 服务容器配置
services:
  golang:
    volumes:                                            # 设置挂在目录
      - ${CODE_PATH_HOST}:/usr/src/code                 # 引用 .env配置文件中`CODE_PATH_HOST`变量，将宿主机上的代码存放的目录改在到容器中 `/usr/src/code` 目录下
    build:
      context: ./golang                                 # 指定构建使用的Dockerfile文件
    environment:
      - TZ=${TZ}                                        # 设置环境变量
    ports:                                              # 端口映射
      - "${API_PORT}:8000"
    stdin_open: true                                    # 开启标准输入，可接受外部输入
    tty: true
    networks:
      - backend
    # restart: always                                     # 指定容器退出后的重启策略为始终重启
  
  mysql:
    build:
      context: ./mysql
    environment:
      - TZ=${TZ}
      - MYSQL_USER=${MYSQL_USERNAME}                    # 设置 MYSQL 用户名
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}                # 设置 MYSQL 用户密码
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}      # 设置 MYSQL root 用户密码
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql          # 引用 .env 配置文件中的 `DATA_PATH_HOST` 变量，将宿主机上存放 MySQL数据的目录挂载到容器中的 `/var/lib/mysql`目录
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
    # restart: always
  
  ncm:
    build:
      context: ./ncm
    ports:
      - "${NCM_PORT}:3000"
    networks:
      - backend
    # restart: always
